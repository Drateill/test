---
name: Apply

on:
  workflow_dispatch:


env:

  ## TERRAFORM
  TF_VERSION: "1.4.2"
  TF_BACKEND_FILE: "../conf/prd.azure.tfbackend"
  TF_VARS_FILE: "<(cat ../conf/prd*.tfvars)"
  TF_ROOT: "terraform"
  TF_PLAN: "plan.tfplan"

  ## AZURE
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}


permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  security-events: write


jobs:

  change-start:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Change start
        run: |
          echo "Change started"


  terraform-apply:
    needs: [change-start]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_ROOT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Github Enterprise configuration
        run: |
          # Update git config using Github token
          if [[ -n "${{ secrets.GH_TOKEN }}" ]]; then
            git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.kyndryl.net".insteadOf "https://github.kyndryl.net"
          fi

      - name: Setup Node.JS for Terraform wrapper
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false -no-color -backend-config="${TF_BACKEND_FILE}"

      - name: Terraform Plan
        id: plan
        run: |
          # Generating Terraform plan
          terraform plan -no-color -input=false -var-file=${{ env.TF_VARS_FILE }} -out=${{ env.TF_PLAN }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false "${TF_PLAN}"


  change-stop:
    needs: [terraform-apply]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Change stop
        run: |
          echo "Change stopped"